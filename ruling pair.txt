Input:
N = 5
arr[] = {55, 23, 32, 46, 88}
Output:
101
Explanation:
All possible pairs that are 
compatible with each other are- (23, 32) 
with digit sum 5 and (55, 46) with digit 
sum 10. Out of these the maximum combined 
ability pair is (55, 46) i.e. 55 + 46 = 101
class Solution { 
	static int RulingPair(int arr[], int n) { 
        // Your code goes here
        HashMap<Integer,Integer> hm = new HashMap<>();
        int max = -1;
        for(int i=0;i<n;i++){
            int x = arr[i];
            int sum=0;
            while(arr[i]>0){
                sum += arr[i]%10;
                arr[i]/=10;
            }
            if(hm.containsKey(sum)){
             //    System.out.println(x);
             int s = x + hm.get(sum);    
           //  System.out.println(s);
             max = Math.max(max,s);  
             if(x>hm.get(sum)){
                 hm.put(sum,x);
             }
            }else{
              hm.put(sum,x);
            }
        }
        return max;
	}    
} 